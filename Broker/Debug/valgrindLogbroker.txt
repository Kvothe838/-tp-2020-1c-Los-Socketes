==14888== Memcheck, a memory error detector
==14888== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14888== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==14888== Command: ./broker
==14888== Parent PID: 11294
==14888== 
==14888== Thread 3:
==14888== Invalid write of size 4
==14888==    at 0x4030ED2: memcpy (in /usr/lib/valgrind/vgpreload_memcheck-x86-linux.so)
==14888==    by 0x8049301: guardarValor (basicCache.c:14)
==14888==    by 0x804A45B: agregarElementoValido (dynamicCache.c:173)
==14888==    by 0x804A4FF: agregarItem (dynamicCache.c:193)
==14888==    by 0x804C027: manejarPublisher (conexionBroker.c:106)
==14888==    by 0x804C1C2: processRequest (conexionBroker.c:148)
==14888==    by 0x804C2B0: serveClient (conexionBroker.c:179)
==14888==    by 0x4057294: start_thread (pthread_create.c:333)
==14888==    by 0x415F0AD: clone (clone.S:114)
==14888==  Address 0x4233208 is 0 bytes after a block of size 1,024 alloc'd
==14888==    at 0x402C17C: malloc (in /usr/lib/valgrind/vgpreload_memcheck-x86-linux.so)
==14888==    by 0x80492AE: inicializarCache (basicCache.c:7)
==14888==    by 0x804B667: inicializarDataBasica (genericCache.c:19)
==14888==    by 0x804B7C8: main (broker.c:28)
==14888== 
==14888== Invalid write of size 2
==14888==    at 0x4030F13: memcpy (in /usr/lib/valgrind/vgpreload_memcheck-x86-linux.so)
==14888==    by 0x8049301: guardarValor (basicCache.c:14)
==14888==    by 0x804A45B: agregarElementoValido (dynamicCache.c:173)
==14888==    by 0x804A4FF: agregarItem (dynamicCache.c:193)
==14888==    by 0x804C027: manejarPublisher (conexionBroker.c:106)
==14888==    by 0x804C1C2: processRequest (conexionBroker.c:148)
==14888==    by 0x804C2B0: serveClient (conexionBroker.c:179)
==14888==    by 0x4057294: start_thread (pthread_create.c:333)
==14888==    by 0x415F0AD: clone (clone.S:114)
==14888==  Address 0x423321c is 20 bytes after a block of size 1,024 in arena "client"
==14888== 

valgrind: m_mallocfree.c:303 (get_bszB_as_is): Assertion 'bszB_lo == bszB_hi' failed.
valgrind: Heap block lo/hi size mismatch: lo = 1072, hi = 26723.
This is probably caused by your program erroneously writing past the
end of a heap block and corrupting heap metadata.  If you fix any
invalid writes reported by Memcheck, this assertion failure will
probably go away.  Please try that before reporting this as a bug.


host stacktrace:
==14888==    at 0x38031375: ??? (in /usr/lib/valgrind/memcheck-x86-linux)
==14888==    by 0x38031481: ??? (in /usr/lib/valgrind/memcheck-x86-linux)
==14888==    by 0x38031563: ??? (in /usr/lib/valgrind/memcheck-x86-linux)
==14888==    by 0x3803DB82: ??? (in /usr/lib/valgrind/memcheck-x86-linux)
==14888==    by 0x3802B058: ??? (in /usr/lib/valgrind/memcheck-x86-linux)
==14888==    by 0x380285D2: ??? (in /usr/lib/valgrind/memcheck-x86-linux)
==14888==    by 0x38029A35: ??? (in /usr/lib/valgrind/memcheck-x86-linux)
==14888==    by 0x3802D691: ??? (in /usr/lib/valgrind/memcheck-x86-linux)
==14888==    by 0x380290B1: ??? (in /usr/lib/valgrind/memcheck-x86-linux)
==14888==    by 0x3800A694: ??? (in /usr/lib/valgrind/memcheck-x86-linux)
==14888==    by 0x3800E70F: ??? (in /usr/lib/valgrind/memcheck-x86-linux)
==14888==    by 0x62BBFF89: ???

sched status:
  running_tid=3

Thread 1: status = VgTs_WaitSys (lwpid 14888)
==14888==    at 0x40583FB: pthread_join (pthread_join.c:90)
==14888==    by 0x804B88B: main (broker.c:47)

Thread 2: status = VgTs_WaitSys (lwpid 14891)
==14888==    at 0x40583FB: pthread_join (pthread_join.c:90)
==14888==    by 0x804C33E: esperarCliente (conexionBroker.c:199)
==14888==    by 0x804C7B9: iniciarServidor (conexionBroker.c:318)
==14888==    by 0x4057294: start_thread (pthread_create.c:333)
==14888==    by 0x415F0AD: clone (clone.S:114)

Thread 3: status = VgTs_Runnable (lwpid 14911)
==14888==    at 0x4030F43: memcpy (in /usr/lib/valgrind/vgpreload_memcheck-x86-linux.so)
==14888==    by 0x8049301: guardarValor (basicCache.c:14)
==14888==    by 0x804A45B: agregarElementoValido (dynamicCache.c:173)
==14888==    by 0x804A4FF: agregarItem (dynamicCache.c:193)
==14888==    by 0x804C027: manejarPublisher (conexionBroker.c:106)
==14888==    by 0x804C1C2: processRequest (conexionBroker.c:148)
==14888==    by 0x804C2B0: serveClient (conexionBroker.c:179)
==14888==    by 0x4057294: start_thread (pthread_create.c:333)
==14888==    by 0x415F0AD: clone (clone.S:114)


Note: see also the FAQ in the source distribution.
It contains workarounds to several common problems.
In particular, if Valgrind aborted or crashed after
identifying problems in your program, there's a good chance
that fixing those problems will prevent Valgrind aborting or
crashing, especially if it happened in m_mallocfree.c.

If that doesn't help, please report this bug to: www.valgrind.org

In the bug report, send all the above text, the valgrind
version, and what OS and version you are using.  Thanks.

