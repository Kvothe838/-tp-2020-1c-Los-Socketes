==20239== Memcheck, a memory error detector
==20239== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20239== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==20239== Command: ./broker
==20239== Parent PID: 16912
==20239== 
==20239== Thread 3:
==20239== Invalid write of size 4
==20239==    at 0x4030ED2: memcpy (in /usr/lib/valgrind/vgpreload_memcheck-x86-linux.so)
==20239==    by 0x804937E: guardarValor (basicCache.c:16)
==20239==    by 0x804A80F: agregarElementoValido (dynamicCache.c:180)
==20239==    by 0x804A9AB: agregarItem (dynamicCache.c:203)
==20239==    by 0x804BC2F: agregarItemGeneric (genericCache.c:55)
==20239==    by 0x804C6A7: manejarPublisher (conexionBroker.c:106)
==20239==    by 0x804C840: processRequest (conexionBroker.c:149)
==20239==    by 0x804C92E: serveClient (conexionBroker.c:180)
==20239==    by 0x4057294: start_thread (pthread_create.c:333)
==20239==    by 0x415F0AD: clone (clone.S:114)
==20239==  Address 0x42363d8 is 0 bytes after a block of size 2,048 alloc'd
==20239==    at 0x402C17C: malloc (in /usr/lib/valgrind/vgpreload_memcheck-x86-linux.so)
==20239==    by 0x80492DE: inicializarCache (basicCache.c:6)
==20239==    by 0x804BB6B: inicializarDataBasica (genericCache.c:20)
==20239==    by 0x804BE48: main (broker.c:28)
==20239== 
==20239== Invalid write of size 2
==20239==    at 0x4030F13: memcpy (in /usr/lib/valgrind/vgpreload_memcheck-x86-linux.so)
==20239==    by 0x804937E: guardarValor (basicCache.c:16)
==20239==    by 0x804A80F: agregarElementoValido (dynamicCache.c:180)
==20239==    by 0x804A9AB: agregarItem (dynamicCache.c:203)
==20239==    by 0x804BC2F: agregarItemGeneric (genericCache.c:55)
==20239==    by 0x804C6A7: manejarPublisher (conexionBroker.c:106)
==20239==    by 0x804C840: processRequest (conexionBroker.c:149)
==20239==    by 0x804C92E: serveClient (conexionBroker.c:180)
==20239==    by 0x4057294: start_thread (pthread_create.c:333)
==20239==    by 0x415F0AD: clone (clone.S:114)
==20239==  Address 0x42363ec is 20 bytes after a block of size 2,048 in arena "client"
==20239== 

valgrind: m_mallocfree.c:303 (get_bszB_as_is): Assertion 'bszB_lo == bszB_hi' failed.
valgrind: Heap block lo/hi size mismatch: lo = 2096, hi = 26723.
This is probably caused by your program erroneously writing past the
end of a heap block and corrupting heap metadata.  If you fix any
invalid writes reported by Memcheck, this assertion failure will
probably go away.  Please try that before reporting this as a bug.


host stacktrace:
==20239==    at 0x38031375: ??? (in /usr/lib/valgrind/memcheck-x86-linux)
==20239==    by 0x38031481: ??? (in /usr/lib/valgrind/memcheck-x86-linux)
==20239==    by 0x38031563: ??? (in /usr/lib/valgrind/memcheck-x86-linux)
==20239==    by 0x3803DB82: ??? (in /usr/lib/valgrind/memcheck-x86-linux)
==20239==    by 0x3802B058: ??? (in /usr/lib/valgrind/memcheck-x86-linux)
==20239==    by 0x380285D2: ??? (in /usr/lib/valgrind/memcheck-x86-linux)
==20239==    by 0x38029A35: ??? (in /usr/lib/valgrind/memcheck-x86-linux)
==20239==    by 0x3802D691: ??? (in /usr/lib/valgrind/memcheck-x86-linux)
==20239==    by 0x380290B1: ??? (in /usr/lib/valgrind/memcheck-x86-linux)
==20239==    by 0x3800A694: ??? (in /usr/lib/valgrind/memcheck-x86-linux)
==20239==    by 0x3800E70F: ??? (in /usr/lib/valgrind/memcheck-x86-linux)
==20239==    by 0x62AD00A1: ???

sched status:
  running_tid=3

Thread 1: status = VgTs_WaitSys (lwpid 20239)
==20239==    at 0x40583FB: pthread_join (pthread_join.c:90)
==20239==    by 0x804BF0B: main (broker.c:58)

Thread 2: status = VgTs_WaitSys (lwpid 20249)
==20239==    at 0x40583FB: pthread_join (pthread_join.c:90)
==20239==    by 0x804C9BC: esperarCliente (conexionBroker.c:200)
==20239==    by 0x804CE37: iniciarServidor (conexionBroker.c:319)
==20239==    by 0x4057294: start_thread (pthread_create.c:333)
==20239==    by 0x415F0AD: clone (clone.S:114)

Thread 3: status = VgTs_Runnable (lwpid 20267)
==20239==    at 0x4030F43: memcpy (in /usr/lib/valgrind/vgpreload_memcheck-x86-linux.so)
==20239==    by 0x804937E: guardarValor (basicCache.c:16)
==20239==    by 0x804A80F: agregarElementoValido (dynamicCache.c:180)
==20239==    by 0x804A9AB: agregarItem (dynamicCache.c:203)
==20239==    by 0x804BC2F: agregarItemGeneric (genericCache.c:55)
==20239==    by 0x804C6A7: manejarPublisher (conexionBroker.c:106)
==20239==    by 0x804C840: processRequest (conexionBroker.c:149)
==20239==    by 0x804C92E: serveClient (conexionBroker.c:180)
==20239==    by 0x4057294: start_thread (pthread_create.c:333)
==20239==    by 0x415F0AD: clone (clone.S:114)


Note: see also the FAQ in the source distribution.
It contains workarounds to several common problems.
In particular, if Valgrind aborted or crashed after
identifying problems in your program, there's a good chance
that fixing those problems will prevent Valgrind aborting or
crashing, especially if it happened in m_mallocfree.c.

If that doesn't help, please report this bug to: www.valgrind.org

In the bug report, send all the above text, the valgrind
version, and what OS and version you are using.  Thanks.

