==13768== Memcheck, a memory error detector
==13768== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13768== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==13768== Command: ./GameCard
==13768== Parent PID: 12613
==13768== 
==13768== Thread 2:
==13768== Use of uninitialised value of size 4
==13768==    at 0x804C5DC: crear_conexion_cliente (connection.c:15)
==13768==    by 0x804C12C: iniciarEscuchaBroker (conexionGameCard.c:227)
==13768==    by 0x804C1E4: escucharBroker (conexionGameCard.c:246)
==13768==    by 0x4057294: start_thread (pthread_create.c:333)
==13768==    by 0x415F0AD: clone (clone.S:114)
==13768== 
==13768== Use of uninitialised value of size 4
==13768==    at 0x804C5E2: crear_conexion_cliente (connection.c:15)
==13768==    by 0x804C12C: iniciarEscuchaBroker (conexionGameCard.c:227)
==13768==    by 0x804C1E4: escucharBroker (conexionGameCard.c:246)
==13768==    by 0x4057294: start_thread (pthread_create.c:333)
==13768==    by 0x415F0AD: clone (clone.S:114)
==13768== 
==13768== Use of uninitialised value of size 4
==13768==    at 0x804C5E8: crear_conexion_cliente (connection.c:15)
==13768==    by 0x804C12C: iniciarEscuchaBroker (conexionGameCard.c:227)
==13768==    by 0x804C1E4: escucharBroker (conexionGameCard.c:246)
==13768==    by 0x4057294: start_thread (pthread_create.c:333)
==13768==    by 0x415F0AD: clone (clone.S:114)
==13768== 
==13768== Use of uninitialised value of size 4
==13768==    at 0x804C5FF: crear_conexion_cliente (connection.c:17)
==13768==    by 0x804C12C: iniciarEscuchaBroker (conexionGameCard.c:227)
==13768==    by 0x804C1E4: escucharBroker (conexionGameCard.c:246)
==13768==    by 0x4057294: start_thread (pthread_create.c:333)
==13768==    by 0x415F0AD: clone (clone.S:114)
==13768== 
==13768== Use of uninitialised value of size 4
==13768==    at 0x804C605: crear_conexion_cliente (connection.c:17)
==13768==    by 0x804C12C: iniciarEscuchaBroker (conexionGameCard.c:227)
==13768==    by 0x804C1E4: escucharBroker (conexionGameCard.c:246)
==13768==    by 0x4057294: start_thread (pthread_create.c:333)
==13768==    by 0x415F0AD: clone (clone.S:114)
==13768== 
==13768== Syscall param socketcall.connect(serv_addr.sa_family) points to unaddressable byte(s)
==13768==    at 0x40602F4: connect (connect.c:33)
==13768==    by 0x804C614: crear_conexion_cliente (connection.c:17)
==13768==    by 0x804C12C: iniciarEscuchaBroker (conexionGameCard.c:227)
==13768==    by 0x804C1E4: escucharBroker (conexionGameCard.c:246)
==13768==    by 0x4057294: start_thread (pthread_create.c:333)
==13768==    by 0x415F0AD: clone (clone.S:114)
==13768==  Address 0x9c3d0 is not stack'd, malloc'd or (recently) free'd
==13768== 
--13768-- VALGRIND INTERNAL ERROR: Valgrind received a signal 11 (SIGSEGV) - exiting
--13768-- si_code=1;  Faulting address: 0x9C3D0;  sp: 0x64c7ae40

valgrind: the 'impossible' happened:
   Killed by fatal signal

host stacktrace:
==13768==    at 0x3807E5AE: ??? (in /usr/lib/valgrind/memcheck-x86-linux)

sched status:
  running_tid=2

Thread 1: status = VgTs_WaitSys (lwpid 13768)
==13768==    at 0x40583FB: pthread_join (pthread_join.c:90)
==13768==    by 0x804C479: main (gamecard.c:35)

Thread 2: status = VgTs_Runnable (lwpid 13771)
==13768==    at 0x40602F4: connect (connect.c:33)
==13768==    by 0x804C614: crear_conexion_cliente (connection.c:17)
==13768==    by 0x804C12C: iniciarEscuchaBroker (conexionGameCard.c:227)
==13768==    by 0x804C1E4: escucharBroker (conexionGameCard.c:246)
==13768==    by 0x4057294: start_thread (pthread_create.c:333)
==13768==    by 0x415F0AD: clone (clone.S:114)

Thread 3: status = VgTs_WaitSys (lwpid 13772)
==13768==    at 0x4060264: accept (accept.c:35)
==13768==    by 0x804C215: esperarGameboy (conexionGameCard.c:256)
==13768==    by 0x804C388: iniciarServidorGameboy (conexionGameCard.c:297)
==13768==    by 0x4057294: start_thread (pthread_create.c:333)
==13768==    by 0x415F0AD: clone (clone.S:114)


Note: see also the FAQ in the source distribution.
It contains workarounds to several common problems.
In particular, if Valgrind aborted or crashed after
identifying problems in your program, there's a good chance
that fixing those problems will prevent Valgrind aborting or
crashing, especially if it happened in m_mallocfree.c.

If that doesn't help, please report this bug to: www.valgrind.org

In the bug report, send all the above text, the valgrind
version, and what OS and version you are using.  Thanks.

